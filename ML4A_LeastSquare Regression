{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1BkyEsxEq9vArkGXREsvTwuAdNK3i6hR5","authorship_tag":"ABX9TyOg9Y0kOva+FchtOdACcra2"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":21,"metadata":{"id":"1D-W-6EDu-dm","executionInfo":{"status":"ok","timestamp":1671561184012,"user_tz":480,"elapsed":407,"user":{"displayName":"Payal Patil","userId":"13989169978662938395"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n"]},{"cell_type":"code","source":["data= pd.read_csv('/content/drive/MyDrive/data set/pract4A.csv')\n","data.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"v2OW8uCPvMoM","executionInfo":{"status":"ok","timestamp":1671561160039,"user_tz":480,"elapsed":797,"user":{"displayName":"Payal Patil","userId":"13989169978662938395"}},"outputId":"6c14f80f-1c1b-461e-fefc-aecf3540aeb8"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Gender  Age Range  Head Size(cm^3)  Brain Weight(grams)\n","0       1          1             4512                 1530\n","1       1          1             3738                 1297\n","2       1          1             4261                 1335\n","3       1          1             3777                 1282\n","4       1          1             4177                 1590"],"text/html":["\n","  <div id=\"df-61bb2ea6-bd23-4c63-912a-44e935233bf2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Gender</th>\n","      <th>Age Range</th>\n","      <th>Head Size(cm^3)</th>\n","      <th>Brain Weight(grams)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4512</td>\n","      <td>1530</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3738</td>\n","      <td>1297</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4261</td>\n","      <td>1335</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3777</td>\n","      <td>1282</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4177</td>\n","      <td>1590</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-61bb2ea6-bd23-4c63-912a-44e935233bf2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-61bb2ea6-bd23-4c63-912a-44e935233bf2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-61bb2ea6-bd23-4c63-912a-44e935233bf2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["# Coomputing X and Y\n","X = data['Head Size(cm^3)'].values\n","Y = data['Brain Weight(grams)'].values\n"],"metadata":{"id":"-SmSYQsmwZzG","executionInfo":{"status":"ok","timestamp":1671561166063,"user_tz":480,"elapsed":699,"user":{"displayName":"Payal Patil","userId":"13989169978662938395"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["# Mean X and Y\n","mean_x = np.mean(X)\n","mean_y = np.mean(Y)\n"," \n"],"metadata":{"id":"Z3D96jsBwsqN","executionInfo":{"status":"ok","timestamp":1671561169942,"user_tz":480,"elapsed":7,"user":{"displayName":"Payal Patil","userId":"13989169978662938395"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["# Total number of values\n","n = len(X)\n"," \n"],"metadata":{"id":"nN0BpRVywwq-","executionInfo":{"status":"ok","timestamp":1671561173700,"user_tz":480,"elapsed":6,"user":{"displayName":"Payal Patil","userId":"13989169978662938395"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["# Using the formula to calculate 'm' and 'c'\n","numer = 0\n","denom = 0\n","for i in range(n):\n","  numer += (X[i] - mean_x) * (Y[i] - mean_y)\n","  denom += (X[i] - mean_x) ** 2\n","m = numer / denom\n","c = mean_y - (m * mean_x)\n"," \n","# Printing coefficients\n","print(\"Coefficients\")\n","print(m, c)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OYf8OyTJwz7t","executionInfo":{"status":"ok","timestamp":1671561177809,"user_tz":480,"elapsed":9,"user":{"displayName":"Payal Patil","userId":"13989169978662938395"}},"outputId":"fb3f9464-68e1-4c3f-fd29-90c3254f4987"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["Coefficients\n","0.3053727542922042 156.90931668200824\n"]}]},{"cell_type":"code","source":["# Plotting Values and Regression Line\n","max_x = np.max(X) + 100\n","min_x = np.min(X) - 100\n"," \n","# Calculating line values x and y\n","x = np.linspace(min_x, max_x, 1000)\n","y = c + m * x\n"," \n","# Ploting Line\n","plt.plot(x, y, color='#58b970', label='Regression Line')\n","# Ploting Scatter Points\n","plt.scatter(X, Y, c='#ef5423', label='Scatter Plot')\n"," \n","plt.xlabel('Head Size in cm3')\n","plt.ylabel('Brain Weight in grams')\n","plt.legend()\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":280},"id":"sZLvIf9_xSOF","executionInfo":{"status":"ok","timestamp":1671561192688,"user_tz":480,"elapsed":896,"user":{"displayName":"Payal Patil","userId":"13989169978662938395"}},"outputId":"9c88c926-ca0c-43d4-fc59-040bb3afab3a"},"execution_count":22,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# Calculating Root Mean Squares Error\n","rmse = 0\n","for i in range(n):\n","    y_pred = c + m * X[i]\n","    rmse += (Y[i] - y_pred) ** 2\n","rmse = np.sqrt(rmse/n)\n","print(\"RMSE\")\n","print(rmse)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"giuKSVoq0hl2","executionInfo":{"status":"ok","timestamp":1671561359344,"user_tz":480,"elapsed":1346,"user":{"displayName":"Payal Patil","userId":"13989169978662938395"}},"outputId":"9db3f2cb-12f8-4080-91ba-dcba06477349"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["RMSE\n","90.33423865769697\n"]}]}]}